#include "pca9685.h"
#include <wiringPi.h>
#include <wiringPiI2C.h>
#include <stdio.h>
#include <stdlib.h>

//#define PIN_BASE 300
#define PIN_BASE 300
#define MAX_PWM 4096
#define HERTZ 370
#define PCA9685_ADDR 0x40

int calcTicks(float impulseMs, int hertz);
int initialize_motors(int channels[4], float freq);
int saturate_number(float* val, float min, float max);

int main(void)
{
	printf("PCA9685 LED example\n");

	int fd = pca9685Setup(PIN_BASE, 0x40, HERTZ);
	if (fd < 0)
	{
		printf("Error in setup\n");
		return fd;
	}

	pca9685PWMReset(fd);

	int active=1;
	while (active){
		pwmWrite (PIN_BASE, 100);
		//printf("%i \n", calcTicks(0, HERTZ));
		delay(5000);
		active=0;
		printf("%i \n",0);
	}
	//while (active=0){
		pwmWrite (PIN_BASE, 1900);
		printf("%i \n", calcTicks(.05, HERTZ));
		printf("%i \n", 2);
	//}
}




// PCA9685 FUNCTIONS //

// calculate PWM input
int calcTicks(float impulseMs, int hertz)
{
	float cycleMs = 1000.0f / hertz;
	return (int)(MAX_PWM * (0.45*impulseMs+1.64) / cycleMs + 0.5f);
}

// initialize motors function
int initialize_motors(int channels[4], float freq){
	int i;
	int fd = pca9685Setup(PIN_BASE, PCA9685_ADDR, HERTZ);
	pca9685PWMReset(fd);
	//usleep(10);
	for( i = 0; (i < 4); i = i+1 ){
		pwmWrite (PIN_BASE+channels[i], 1500);
		//usleep(10000);
		//sleep(3);
	}
	//usleep(100000);
	return fd;
}

// saturate values
int saturate_number(float* val, float min, float max){
	if(*val>max){
		*val = max;
		return 1;
	}
	else if(*val<min){	
		*val = min;
		return 1;
	}
	return 0;
}
